// <auto-generated />
using CDN.Directory.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CDN.Directory.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            //MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CDN.Directory.Core.Entities.HobbyMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Hobbies");
                });

            modelBuilder.Entity("CDN.Directory.Core.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("CDN.Directory.Core.Entities.MemberHobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HobbyId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HobbyId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberHobbies");
                });

            modelBuilder.Entity("CDN.Directory.Core.Entities.MemberSkillset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("SkillsetId");

                    b.ToTable("MemberSkillsets");
                });

            modelBuilder.Entity("CDN.Directory.Core.Entities.SkillsetMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Skillsets");
                });

            modelBuilder.Entity("CDN.Directory.Core.Entities.MemberHobby", b =>
                {
                    b.HasOne("CDN.Directory.Core.Entities.HobbyMaster", "Hobby")
                        .WithMany("MemberHobbies")
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CDN.Directory.Core.Entities.Member", "Member")
                        .WithMany("MemberHobbies")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hobby");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("CDN.Directory.Core.Entities.MemberSkillset", b =>
                {
                    b.HasOne("CDN.Directory.Core.Entities.Member", "Member")
                        .WithMany("MemberSkillsets")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CDN.Directory.Core.Entities.SkillsetMaster", "Skillset")
                        .WithMany("MemberSkillsets")
                        .HasForeignKey("SkillsetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Skillset");
                });

            modelBuilder.Entity("CDN.Directory.Core.Entities.HobbyMaster", b =>
                {
                    b.Navigation("MemberHobbies");
                });

            modelBuilder.Entity("CDN.Directory.Core.Entities.Member", b =>
                {
                    b.Navigation("MemberHobbies");

                    b.Navigation("MemberSkillsets");
                });

            modelBuilder.Entity("CDN.Directory.Core.Entities.SkillsetMaster", b =>
                {
                    b.Navigation("MemberSkillsets");
                });
#pragma warning restore 612, 618
        }
    }
}
